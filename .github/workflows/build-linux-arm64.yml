name: Build Bitcoin Core for Android (ARM64)

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Checkout Bitcoin Core source code
      - name: Checkout source
        uses: actions/checkout@v4

      # Step 2: Install build dependencies and Android NDK
      - name: Install dependencies & NDK
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config bsdmainutils python3 curl git ca-certificates ccache cmake wget unzip ninja-build

          # NDK r26c for ARM64
          NDK_VERSION=r26c
          wget https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux.zip
          unzip -q android-ndk-${NDK_VERSION}-linux.zip
          echo "NDK_PATH=$(pwd)/android-ndk-${NDK_VERSION}" >> $GITHUB_ENV

      # Step 3: Build Bitcoin depends for Android
      - name: Build depends
        run: |
          cd depends
          TOOLCHAIN_PATH="${NDK_PATH}/toolchains/llvm/prebuilt/linux-x86_64/bin"
          SYSROOT_PATH="${NDK_PATH}/toolchains/llvm/prebuilt/linux-x86_64/sysroot"

          echo "Using Toolchain: $TOOLCHAIN_PATH"
          echo "Using Sysroot: $SYSROOT_PATH"

          make HOST=aarch64-linux-android -j$(nproc) NO_GUI=1 \
            CC="${TOOLCHAIN_PATH}/aarch64-linux-android21-clang" \
            CXX="${TOOLCHAIN_PATH}/aarch64-linux-android21-clang++" \
            AR="${TOOLCHAIN_PATH}/aarch64-linux-android-ar" \
            RANLIB="${TOOLCHAIN_PATH}/aarch64-linux-android-ranlib" \
            STRIP="${TOOLCHAIN_PATH}/aarch64-linux-android-strip" \
            CMAKE_FLAGS="-DCMAKE_SYSROOT=${SYSROOT_PATH} \
                         -DCMAKE_C_COMPILER=${TOOLCHAIN_PATH}/aarch64-linux-android21-clang \
                         -DCMAKE_CXX_COMPILER=${TOOLCHAIN_PATH}/aarch64-linux-android21-clang++ \
                         -DCMAKE_CXX_STANDARD=17"

      # Step 4: Configure & Build Bitcoin Core
      - name: Configure & Build Bitcoin Core
        run: |
          ./autogen.sh
          CONFIG_SITE=$PWD/depends/aarch64-linux-android/share/config.site ./configure \
            --prefix=/ --enable-wallet --disable-tests --disable-bench --without-gui --enable-util-cli
          make -j$(nproc)

      # Step 5: Collect binaries
      - name: Prepare binaries
        run: |
          mkdir -p release/bin
          cp src/.libs/bitcoind release/bin/
          cp src/.libs/bitcoin-cli release/bin/
          cp src/.libs/bitcoin-tx release/bin/ || true
          cp src/.libs/bitcoin-util release/bin/ || true
          tar -czvf bitcoin-android-arm64.tar.gz -C release .

      # Step 6: Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bitcoin-android-arm64
          path: bitcoin-android-arm64.tar.gz
          
