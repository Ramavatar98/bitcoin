# इस वर्कफ़लो फ़ाइल का नाम
name: Build Bitcoin Core for Android (ARM64)

# यह वर्कफ़लो कब चलेगा?
on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

# वर्कफ़लो में किए जाने वाले काम (Jobs)
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # स्टेप 1: सोर्स कोड को डाउनलोड करना
      - name: Checkout Bitcoin Core source code
        uses: actions/checkout@v4

      # स्टेप 2: ज़रूरी निर्भरताओं को इंस्टॉल करना
      - name: Install build dependencies and Android NDK
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config bsdmainutils python3 curl git ca-certificates ccache cmake wget unzip
          
          wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
          unzip -q android-ndk-r21e-linux-x86_64.zip
          
          echo "ANDROID_NDK_HOME=$(pwd)/android-ndk-r21e" >> $GITHUB_ENV
          export ANDROID_NDK_HOME=$(pwd)/android-ndk-r21e
          
          # टूलचेन के पाथ को एक्सपोर्ट करना
          export PATH="$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH"

      # स्टेप 3: बिटकॉइन की निर्भरताओं को बनाना (NO_GUI के साथ)
      - name: Build dependencies for Android ARM64
        run: |
          cd depends
          make HOST=aarch64-linux-android -j$(nproc) NO_GUI=1

      # स्टेप 4: बिटकॉइन कोर को कॉन्फ़िगर और कंपाइल करना
      - name: Configure and build Bitcoin Core
        env:
          # यहाँ हम configure को चलाने के लिए सभी ज़रूरी एनवायरनमेंट वेरिएबल्स को स्पष्ट रूप से सेट कर रहे हैं
          PATH: ${{ env.ANDROID_NDK_HOME }}/toolchains/llvm/prebuilt/linux-x86_64/bin:${{ env.PATH }}
          CC: aarch64-linux-android21-clang
          CXX: aarch64-linux-android21-clang++
          AR: aarch64-linux-android-ar
          RANLIB: aarch64-linux-android-ranlib
          STRIP: aarch64-linux-android-strip
        run: |
          ./autogen.sh
          # --host फ्लैग स्पष्ट रूप से टारगेट आर्किटेक्चर को बताता है
          ./configure --prefix=$PWD/depends/aarch64-linux-android --host=aarch64-linux-android --enable-wallet --disable-tests --disable-bench --without-gui --enable-util-cli
          make -j$(nproc)

      # स्टेप 5: परिणामी फाइलों को इकट्ठा करना
      - name: Prepare artifacts for upload
        run: |
          mkdir -p release/bin
          # पाथ को src/.libs/ पर रखना सुरक्षित है
          cp src/.libs/bitcoind release/bin/
          cp src/.libs/bitcoin-cli release/bin/

      # स्टेप 6: बनी हुई फाइलों को अपलोड करना
      - name: Upload compiled binaries as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: bitcoin-android-arm64
          path: release/
